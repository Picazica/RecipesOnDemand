{"version":3,"sources":["components/Form.js","components/Recipe.js","components/Recipes.js","App.js","reportWebVitals.js","index.js","components/recipes.module.css"],"names":["Form","props","useState","formInput","setFormInput","onSubmit","e","preventDefault","setQuery","className","type","value","onChange","target","Recipe","recipe","style","src","image","alt","label","ingredients","map","item","text","calories","toFixed","Recipes","recipes","App","query","setRecipes","useEffect","a","fetch","plainData","json","data","hits","console","log","getRecipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAsBeA,EApBF,SAAAC,GACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAWA,OACI,uBAAMC,SANK,SAAAC,GACbA,EAAEC,iBACFN,EAAMO,SAASL,IAIWM,UAAU,cAAlC,UACE,uBAAOC,KAAK,OAAOC,MAAOR,EAAWS,SAXtB,SAAAN,GACnBF,EAAaE,EAAEO,OAAOF,QAU2CF,UAAU,eACvE,uBAAOC,KAAK,SAASC,MAAM,SAASF,UAAU,mB,gBCIvCK,EAlBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,sBAAKN,UAAWO,IAAMD,OAAtB,UACE,qBAAKE,IAAKF,EAAOA,OAAOG,MAAOC,IAAI,MAAMV,UAAWO,IAAME,QAE1D,+BACE,6BAAKH,EAAOA,OAAOK,QACnB,6BACGL,EAAOA,OAAOM,YAAYC,KAAI,SAAAC,GAAI,OACjC,6BAAKA,EAAKC,YAGd,4CAAeT,EAAOA,OAAOU,SAASC,UAAtC,kBCAOC,EAZC,SAAA1B,GACd,OACE,qBAAKQ,UAAU,UAAf,SACE,6BACGR,EAAM2B,QAAQN,KAAI,SAAAC,GAAI,OACrB,cAAC,EAAD,CAAQR,OAAQQ,YCuBXM,MAzBf,WACE,MAA0B3B,mBAAS,WAAnC,mBAAO4B,EAAP,KAActB,EAAd,KACA,EAA8BN,mBAAS,IAAvC,mBAAO0B,EAAP,KAAgBG,EAAhB,KAcA,OAZAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,mCAAD,OACQJ,EADR,+GADb,cACVK,EADU,gBAIGA,EAAUC,OAJb,OAIVC,EAJU,OAKhBN,EAAWM,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAND,2CAAH,qDAQfG,KACC,CAACX,IAGF,sBAAKrB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,CAAMqB,MAAOA,EAAOtB,SAAUA,IAC9B,cAAC,EAAD,CAASoB,QAASA,QCdTc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,0B","file":"static/js/main.2f102d5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Form = props => {\r\n  const [formInput, setFormInput] = useState(\"\");\r\n\r\n  const getFormInput = e => {\r\n    setFormInput(e.target.value);\r\n  };\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    props.setQuery(formInput);\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={submit} className=\"search-form\">\r\n        <input type=\"text\" value={formInput} onChange={getFormInput} className=\"search-bar\"/>\r\n        <input type=\"submit\" value=\"Submit\" className=\"search-btn\"/>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport style from \"./recipes.module.css\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <img src={recipe.recipe.image} alt=\"rec\" className={style.image} />\r\n\r\n      <li>\r\n        <h2>{recipe.recipe.label}</h2>\r\n        <ol>\r\n          {recipe.recipe.ingredients.map(item => (\r\n            <li>{item.text}</li>\r\n          ))}\r\n        </ol>\r\n        <h5>Calories: {recipe.recipe.calories.toFixed()} kcal</h5>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport Recipe from \"./Recipe.js\";\r\n\r\nconst Recipes = props => {\r\n  return (\r\n    <div className=\"recipes\">\r\n      <ul>\r\n        {props.recipes.map(item => (\r\n          <Recipe recipe={item} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport Recipes from \"./components/Recipes\";\n\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"chicken\");\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      const plainData = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=643ecb8f&app_key=7cadc8e0cf697101583abf9df9c47e54&from=0&to=3&calories=591-722&health=alcohol-free`\n      );\n      const data = await plainData.json();\n      setRecipes(data.hits);\n      console.log(data.hits);\n    };\n    getRecipe();\n  }, [query]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Receipts on Demand</h1>\n      <Form query={query} setQuery={setQuery} />\n      <Recipes recipes={recipes} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipes_recipe__1wtmK\",\"image\":\"recipes_image__2Wh7W\"};"],"sourceRoot":""}